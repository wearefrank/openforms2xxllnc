<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c7451bda-6915-4166-8379-a3921e2cca1f" activeEnvironment="Default" name="openforms2xxllnc" resourceRoot="" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="c3c11aff-2fde-4150-8256-6a0648a631fd" wadlVersion="http://wadl.dev.java.net/2009/02" name="Documenten API" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>Een API om een documentregistratiecomponent (DRC) te benaderen.

In een documentregistratiecomponent worden INFORMATIEOBJECTen opgeslagen. Een
INFORMATIEOBJECT is een digitaal document voorzien van meta-gegevens.
INFORMATIEOBJECTen kunnen aan andere objecten zoals zaken en besluiten worden
gerelateerd (maar dat hoeft niet) en kunnen gebruiksrechten hebben.

GEBRUIKSRECHTEN leggen voorwaarden op aan het gebruik van het INFORMATIEOBJECT
(buiten raadpleging). Deze GEBRUIKSRECHTEN worden niet door de API gevalideerd
of gehandhaafd.

De typering van INFORMATIEOBJECTen is in de Catalogi API (ZTC) ondergebracht in
de vorm van INFORMATIEOBJECTTYPEn.

**Uploaden van bestanden**

Binnen deze API bestaan een aantal endpoints die binaire data ontvangen, al
dan niet base64-encoded. Webservers moeten op deze endpoints een minimale
request body size van 4.0 GiB ondersteunen. Dit omvat de JSON van de
metadata EN de base64-encoded bestandsdata. Hou hierbij rekening met de
overhead van base64, die ongeveer 33% bedraagt in worst-case scenario's. Dit
betekent dat bij een limiet van 4GB het bestand maximaal ongeveer 3GB groot
mag zijn.

**Afhankelijkheden**

Deze API is afhankelijk van:

* Catalogi API
* Notificaties API
* Autorisaties API *(optioneel)*
* Zaken API *(optioneel)*


### Autorisatie

Deze API vereist autorisatie.

_Zelf een token genereren_

De tokens die gebruikt worden voor autorisatie zijn [JWT's](https://jwt.io) (JSON web
token). In de API calls moeten deze gebruikt worden in de `Authorization`
header:

```
Authorization: Bearer &lt;token>
```

Om een JWT te genereren heb je een `client ID` en een `secret` nodig. Het JWT
moet gebouwd worden volgens het `HS256` algoritme. De vereiste payload is:

```json
{
    "iss": "&lt;client ID>",
    "iat": 1572863906,
    "client_id": "&lt;client ID>",
    "user_id": "&lt;user identifier>",
    "user_representation": "&lt;user representation>"
}
```

Als `issuer` gebruik je dus je eigen client ID. De `iat` timestamp is een
UNIX-timestamp die aangeeft op welk moment het token gegenereerd is.

`user_id` en `user_representation` zijn nodig voor de audit trails. Het zijn
vrije velden met als enige beperking dat de lengte maximaal de lengte van
de overeenkomstige velden in de audit trail resources is (zie rest API spec).


### Notificaties

Deze API publiceert notificaties op het kanaal `documenten`.

**Main resource**

`enkelvoudiginformatieobject`



**Kenmerken**

* `bronorganisatie`: Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die het informatieobject heeft gecreëerd of heeft ontvangen en als eerste in een samenwerkingsketen heeft vastgelegd.
* `informatieobjecttype`: URL-referentie naar het INFORMATIEOBJECTTYPE (in de Catalogi API).
* `vertrouwelijkheidaanduiding`: Aanduiding van de mate waarin het INFORMATIEOBJECT voor de openbaarheid bestemd is.

**Resources en acties**
- `enkelvoudiginformatieobject`: create, update, destroy
- `gebruiksrechten`: create, update, destroy


**Handige links**

* [API-documentatie](https://vng-realisatie.github.io/gemma-zaken/standaard/)
* [Open Zaak documentatie](https://open-zaak.readthedocs.io/en/latest/)
* [Zaakgericht werken](https://www.vngrealisatie.nl/producten/api-standaarden-zaakgericht-werken)
* [Open Zaak GitHub](https://github.com/open-zaak/open-zaak)</con:description>
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://LAPTOP-UKAI1A6:8080/</con:endpoint>
      <con:endpoint>http://LAPTOP-UKAI1A6:8700/mock/documenten/api/v1</con:endpoint>
      <con:endpoint>http://host.docker.internal:9000/catalogi/api/v1</con:endpoint>
      <con:endpoint>http://localhost:9000/documenten/api/v1</con:endpoint>
    </con:endpoints>
    <con:resource name="/bestandsdelen/{uuid}" path="/bestandsdelen/{uuid}" id="d285cf43-8212-4575-bd88-6e2bf6e99128">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="bestandsdeel_update" id="adb38a77-217d-412d-aeb4-6962d9e54eb3" method="PUT">
        <con:description>Upload een bestandsdeel</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b9edc82d-766f-4dcf-ab09-9028a0f5899b" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten" path="/enkelvoudiginformatieobjecten" id="1f5518be-a15d-4bed-abce-64bdd41d756c">
      <con:settings/>
      <con:parameters/>
      <con:method name="enkelvoudiginformatieobject_list" id="f3e4601b-180f-4b25-b13a-03da472bebb8" method="GET">
        <con:description>Deze lijst kan gefilterd wordt met query-string parameters.

De objecten bevatten metadata over de documenten en de downloadlink
(`inhoud`) naar de binary data. Alleen de laatste versie van elk
(ENKELVOUDIG) INFORMATIEOBJECT wordt getoond. Specifieke versies kunnen
alleen
Alle (ENKELVOUDIGe) INFORMATIEOBJECTen opvragen.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>identificatie</con:name>
            <con:style>QUERY</con:style>
            <con:description>Een binnen een gegeven context ondubbelzinnige referentie naar het INFORMATIEOBJECT.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>bronorganisatie</con:name>
            <con:style>QUERY</con:style>
            <con:description>Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die het informatieobject heeft gecreëerd of heeft ontvangen en als eerste in een samenwerkingsketen heeft vastgelegd.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>Een pagina binnen de gepagineerde set resultaten.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="f1958b73-eb9b-4268-8737-a00c2249fbbf" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="enkelvoudiginformatieobject_create" id="29c5c931-ff13-4605-9fca-ef8f98c34e27" method="POST">
        <con:description>**Er wordt gevalideerd op**
- geldigheid `informatieobjecttype` URL - de resource moet opgevraagd kunnen
  worden uit de catalogi API en de vorm van een INFORMATIEOBJECTTYPE hebben.
- publicatie `informatieobjecttype` - `concept` moet `false` zijn
Maak een (ENKELVOUDIG) INFORMATIEOBJECT aan.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>413</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:element xmlns:enk="http://host.docker.internal/catalogi/api/v1/enkelvoudiginformatieobjecten">enk:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>405</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>405</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>405</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>405</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>405</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="24114b0b-5ee4-410f-b91b-50fa509258dc" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/_zoek" path="/enkelvoudiginformatieobjecten/_zoek" id="bdcedd73-9337-4723-b047-18391f27dd99">
      <con:settings/>
      <con:parameters/>
      <con:method name="enkelvoudiginformatieobject__zoek" id="ae0117c2-ae4a-409a-8f1c-dd3266758d1d" method="POST">
        <con:description>Zoeken/filteren gaat normaal via de `list` operatie, deze is echter
niet geschikt voor zoekopdrachten met UUIDs.
Voer een zoekopdracht uit op (ENKELVOUDIG) INFORMATIEOBJECTen .</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>page</con:name>
            <con:style>QUERY</con:style>
            <con:description>Een pagina binnen de gepagineerde set resultaten.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="488ab0c5-0267-4d6f-8475-5ccfd7dd1a93" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{enkelvoudiginformatieobject_uuid}/audittrail" path="/enkelvoudiginformatieobjecten/{enkelvoudiginformatieobject_uuid}/audittrail" id="90bfea35-ffea-44d5-b649-28371d143c4c">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>enkelvoudiginformatieobject_uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="audittrail_list" id="59875349-9ef7-4011-948c-218eb8d7730b" method="GET">
        <con:description>Alle audit trail regels behorend bij het INFORMATIEOBJECT.
Alle audit trail regels behorend bij het INFORMATIEOBJECT.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="d174403d-312f-4e52-bb47-9f9bc19c1cd4" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{enkelvoudiginformatieobject_uuid}/audittrail/{uuid}" path="/enkelvoudiginformatieobjecten/{enkelvoudiginformatieobject_uuid}/audittrail/{uuid}" id="bf4c416b-1aef-438a-85fb-16b9425a1239">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>enkelvoudiginformatieobject_uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke identificatie van de audit regel.</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="audittrail_read" id="51ea03c4-4c88-4d4d-98f4-6e4ea0ba384d" method="GET">
        <con:description>Een specifieke audit trail regel opvragen.
Een specifieke audit trail regel opvragen.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="bc7c1607-4566-46fb-88c9-b4f49c26e971" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{uuid}" path="/enkelvoudiginformatieobjecten/{uuid}" id="b53b596f-f255-4571-b37e-ee6ef6c56b1c">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="enkelvoudiginformatieobject_read" id="cf11f6d9-fa5b-4176-bf90-e035dc460377" method="GET">
        <con:description>Het object bevat metadata over het document en de downloadlink (`inhoud`)
naar de binary data. Dit geeft standaard de laatste versie van het
(ENKELVOUDIG) INFORMATIEOBJECT. Specifieke versies kunnen middels
query-string parameters worden opgevraagd.
Een specifiek (ENKELVOUDIG) INFORMATIEOBJECT opvragen.</con:description>
        <con:settings>
          <con:setting id="RecordResponseRepresentations">true</con:setting>
        </con:settings>
        <con:parameters>
          <con:parameter>
            <con:name>versie</con:name>
            <con:style>QUERY</con:style>
            <con:description>Het (automatische) versienummer van het INFORMATIEOBJECT.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>registratieOp</con:name>
            <con:style>QUERY</con:style>
            <con:description>Een datumtijd in ISO8601 formaat. De versie van het INFORMATIEOBJECT die qua `begin_registratie` het kortst hiervoor zit wordt opgehaald.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>If-None-Match</con:name>
            <con:style>HEADER</con:style>
            <con:description>Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="small pdf - e5a1e6d1-f67f-4f79-aefd-a37ab209fa5c" id="e4c22cf1-079a-483c-af07-1e8e90fbd69a" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:9000/documenten/api/v1</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="enkelvoudiginformatieobject_update" id="2de14c31-e72b-4c3f-b517-e082c15d898e" method="PUT">
        <con:description>Dit creëert altijd een nieuwe versie van het (ENKELVOUDIG) INFORMATIEOBJECT.

**Er wordt gevalideerd op**
- correcte `lock` waarde
- geldigheid `informatieobjecttype` URL - de resource moet opgevraagd kunnen
  worden uit de catalogi API en de vorm van een INFORMATIEOBJECTTYPE hebben.
- publicatie `informatieobjecttype` - `concept` moet `false` zijn
- status NIET `definitief`

*TODO*
- valideer immutable attributes
Werk een (ENKELVOUDIG) INFORMATIEOBJECT in zijn geheel bij.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>413</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="add52cf2-f6b8-4b1b-aef7-b585f663ae44" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="enkelvoudiginformatieobject_delete" id="6ce1ef25-e1c5-4c39-b444-39177b3ba51b" method="DELETE">
        <con:description>Verwijder een (ENKELVOUDIG) INFORMATIEOBJECT en alle bijbehorende versies,
samen met alle gerelateerde resources binnen deze API. Dit is alleen mogelijk
als er geen OBJECTINFORMATIEOBJECTen relateerd zijn aan het (ENKELVOUDIG)
INFORMATIEOBJECT.

**Gerelateerde resources**
- GEBRUIKSRECHTen
- audit trail regels
Verwijder een (ENKELVOUDIG) INFORMATIEOBJECT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="58ee2e37-b9d2-4fee-9825-8809edcf94c2" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="enkelvoudiginformatieobject_partial_update" id="a4f71213-2dba-4c19-be2c-6d177d320c14" method="PATCH">
        <con:description>Dit creëert altijd een nieuwe versie van het (ENKELVOUDIG) INFORMATIEOBJECT.

**Er wordt gevalideerd op**
- correcte `lock` waarde
- geldigheid `informatieobjecttype` URL - de resource moet opgevraagd kunnen
  worden uit de catalogi API en de vorm van een INFORMATIEOBJECTTYPE hebben.
- publicatie `informatieobjecttype` - `concept` moet `false` zijn
- status NIET `definitief`

*TODO*
- valideer immutable attributes
Werk een (ENKELVOUDIG) INFORMATIEOBJECT deels bij.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>413</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="830bc248-f42e-4f1a-a862-fef1cad48af1" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{uuid}/download" path="/enkelvoudiginformatieobjecten/{uuid}/download" id="291a3469-c780-42d7-a53c-392ee5874c31">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="enkelvoudiginformatieobject_download" id="8f603f39-b73b-4cf1-9fd6-ecee0df97892" method="GET">
        <con:description>Download de binaire data van het (ENKELVOUDIG) INFORMATIEOBJECT.
Download de binaire data van het (ENKELVOUDIG) INFORMATIEOBJECT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>versie</con:name>
            <con:style>QUERY</con:style>
            <con:description>Het (automatische) versienummer van het INFORMATIEOBJECT.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>registratieOp</con:name>
            <con:style>QUERY</con:style>
            <con:description>Een datumtijd in ISO8601 formaat. De versie van het INFORMATIEOBJECT die qua `begin_registratie` het kortst hiervoor zit wordt opgehaald.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="fffce62e-bbf9-4098-b172-a68d391d5c06" mediaType="application/json">
          <con:settings/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{uuid}/lock" path="/enkelvoudiginformatieobjecten/{uuid}/lock" id="872828c1-3957-424c-8ac9-023671f9d11e">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="enkelvoudiginformatieobject_lock" id="72088109-dd63-40fe-b06c-d4b837e4c81b" method="POST">
        <con:description>Voert een "checkout" uit waardoor het (ENKELVOUDIG) INFORMATIEOBJECT
vergrendeld wordt met een `lock` waarde. Alleen met deze waarde kan het
(ENKELVOUDIG) INFORMATIEOBJECT bijgewerkt (`PUT`, `PATCH`) en weer
ontgrendeld worden.
Vergrendel een (ENKELVOUDIG) INFORMATIEOBJECT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="aa2b5a92-aa0c-4022-ab1f-63449e8d78a3" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/enkelvoudiginformatieobjecten/{uuid}/unlock" path="/enkelvoudiginformatieobjecten/{uuid}/unlock" id="5cb83ce8-f8c5-4924-9dad-3643ac6aa1e0">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="enkelvoudiginformatieobject_unlock" id="eaa3189b-e7e9-4379-8b80-0d47f5e558d9" method="POST">
        <con:description>Heft de "checkout" op waardoor het (ENKELVOUDIG) INFORMATIEOBJECT
ontgrendeld wordt.
Ontgrendel een (ENKELVOUDIG) INFORMATIEOBJECT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="5cf33428-12f9-4cf1-aa29-10b3a23a4fc0" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/gebruiksrechten" path="/gebruiksrechten" id="33dd10ed-9659-4ec2-96d6-d181e675ee61">
      <con:settings/>
      <con:parameters/>
      <con:method name="gebruiksrechten_list" id="61be4ac8-b763-4b0a-8706-b8ce246db161" method="GET">
        <con:description>Deze lijst kan gefilterd wordt met query-string parameters.
Alle GEBRUIKSRECHTen opvragen.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>informatieobject</con:name>
            <con:style>QUERY</con:style>
            <con:description>URL-referentie naar het INFORMATIEOBJECT.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>startdatum__lt</con:name>
            <con:style>QUERY</con:style>
            <con:description>Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn. Doorgaans is de datum van creatie van het informatieobject de startdatum.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>startdatum__lte</con:name>
            <con:style>QUERY</con:style>
            <con:description>Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn. Doorgaans is de datum van creatie van het informatieobject de startdatum.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>startdatum__gt</con:name>
            <con:style>QUERY</con:style>
            <con:description>Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn. Doorgaans is de datum van creatie van het informatieobject de startdatum.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>startdatum__gte</con:name>
            <con:style>QUERY</con:style>
            <con:description>Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn. Doorgaans is de datum van creatie van het informatieobject de startdatum.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>einddatum__lt</con:name>
            <con:style>QUERY</con:style>
            <con:description>Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>einddatum__lte</con:name>
            <con:style>QUERY</con:style>
            <con:description>Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>einddatum__gt</con:name>
            <con:style>QUERY</con:style>
            <con:description>Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>einddatum__gte</con:name>
            <con:style>QUERY</con:style>
            <con:description>Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="e2879868-47d7-4c01-b0d4-409cebd0dca6" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="gebruiksrechten_create" id="a7ff51e1-d0cf-4794-9fe5-eacbc3acb021" method="POST">
        <con:description>Voeg GEBRUIKSRECHTen toe voor een INFORMATIEOBJECT.

**Opmerkingen**
- Het toevoegen van gebruiksrechten zorgt ervoor dat de
  `indicatieGebruiksrecht` op het informatieobject op `true` gezet wordt.
Maak een GEBRUIKSRECHT aan.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="d9198fdb-b803-4246-b7c9-c20d697c182c" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/gebruiksrechten/{uuid}" path="/gebruiksrechten/{uuid}" id="215cc2c2-aca8-4250-b686-1e7359ffcd5d">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="gebruiksrechten_read" id="af926123-5ea7-4aa2-b559-4fd9e8ddb785" method="GET">
        <con:description>Een specifieke GEBRUIKSRECHT opvragen.
Een specifieke GEBRUIKSRECHT opvragen.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>If-None-Match</con:name>
            <con:style>HEADER</con:style>
            <con:description>Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="95152542-f706-43bf-b9d7-aad44c768ec3" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="gebruiksrechten_update" id="57ccea24-4f0d-4f31-b8ba-10e09eae041b" method="PUT">
        <con:description>Werk een GEBRUIKSRECHT in zijn geheel bij.
Werk een GEBRUIKSRECHT in zijn geheel bij.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="201dcf2b-ba7e-478a-be78-b644d0822f62" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="gebruiksrechten_delete" id="25c0aadb-eb53-43d1-82ea-b1c07ae890b4" method="DELETE">
        <con:description>**Opmerkingen**
- Indien het laatste GEBRUIKSRECHT van een INFORMATIEOBJECT verwijderd
  wordt, dan wordt de `indicatieGebruiksrecht` van het INFORMATIEOBJECT op
  `null` gezet.
Verwijder een GEBRUIKSRECHT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="06d311c0-0b69-46b6-b8d3-d8a0c5dac64a" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="gebruiksrechten_partial_update" id="f2d7e535-f71b-4867-a27b-cd39621751b2" method="PATCH">
        <con:description>Werk een GEBRUIKSRECHT relatie deels bij.
Werk een GEBRUIKSRECHT relatie deels bij.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-NLX-Logrecord-ID</con:name>
            <con:style>HEADER</con:style>
            <con:description>Identifier of the request, traceable throughout the network</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>X-Audit-Toelichting</con:name>
            <con:style>HEADER</con:style>
            <con:description>Toelichting waarom een bepaald verzoek wordt gedaan</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="be2e5a6d-cd86-4982-920e-78e777f7dbd6" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/objectinformatieobjecten" path="/objectinformatieobjecten" id="1675eb2e-fe82-45a3-80c1-2d43bc83a1ed">
      <con:settings/>
      <con:parameters/>
      <con:method name="objectinformatieobject_list" id="e2bd5b2e-c21f-4c13-82ec-0ada82757da7" method="GET">
        <con:description>Deze lijst kan gefilterd wordt met query-string parameters.
Alle OBJECT-INFORMATIEOBJECT relaties opvragen.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>object</con:name>
            <con:style>QUERY</con:style>
            <con:description>URL-referentie naar het gerelateerde OBJECT (in deze of een andere API).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>informatieobject</con:name>
            <con:style>QUERY</con:style>
            <con:description>URL-referentie naar het INFORMATIEOBJECT.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="a838e6d4-4837-49af-9ea4-98cc4103adc1" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="objectinformatieobject_create" id="3f942fb1-61ad-43ee-8744-9e892cb2969e" method="POST">
        <con:description>**LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**

Andere API's, zoals de Zaken API en de Besluiten API, gebruiken dit
endpoint bij het synchroniseren van relaties.

**Er wordt gevalideerd op**
- geldigheid `informatieobject` URL
- de combinatie `informatieobject` en `object` moet uniek zijn
- bestaan van `object` URL
Maak een OBJECT-INFORMATIEOBJECT relatie aan.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="cb44f278-e6c3-4b7d-96b3-2f24436cda9b" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/objectinformatieobjecten/{uuid}" path="/objectinformatieobjecten/{uuid}" id="04f1e717-6c78-4f73-b2ed-b4aac056dc83">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>Unieke resource identifier (UUID4)</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="objectinformatieobject_read" id="155fe19d-8bba-4fce-84ac-935d5e20a726" method="GET">
        <con:description>Een specifieke OBJECT-INFORMATIEOBJECT relatie opvragen.
Een specifieke OBJECT-INFORMATIEOBJECT relatie opvragen.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>If-None-Match</con:name>
            <con:style>HEADER</con:style>
            <con:description>Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="6698ea29-a253-4756-9fbf-6cfd86158bd4" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="objectinformatieobject_update" id="12cc81b9-def6-4a37-b79f-697187f7821f" method="PUT">
        <con:description>Het betreft een relatie tussen een willekeurig OBJECT, bijvoorbeeld een
ZAAK in de Zaken API, en een INFORMATIEOBJECT.
Opvragen en verwijderen van OBJECT-INFORMATIEOBJECT relaties.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="ecb9042b-35b5-4ab6-92fc-dd85ea8ea64e" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="objectinformatieobject_delete" id="d0275579-f2da-4b01-a1ea-5541d8dcfb7d" method="DELETE">
        <con:description>**LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**

Andere API's, zoals de Zaken API en de Besluiten API, gebruiken dit
endpoint bij het synchroniseren van relaties.
Verwijder een OBJECT-INFORMATIEOBJECT relatie.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="d238e33a-5bb5-47cc-83f7-31979b421cb3" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="objectinformatieobject_partial_update" id="b83fdeb7-8956-4197-85f1-af42c21f8540" method="PATCH">
        <con:description>Het betreft een relatie tussen een willekeurig OBJECT, bijvoorbeeld een
ZAAK in de Zaken API, en een INFORMATIEOBJECT.
Opvragen en verwijderen van OBJECT-INFORMATIEOBJECT relaties.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type van de verzoekinhoud.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>406</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>410</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>415</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>429</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="5b1ac0c8-47c6-480f-b349-9848000721bd" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="3cdd2595-ced1-4c1a-ad1f-37279f6ab1f6" wadlVersion="http://wadl.dev.java.net/2009/02" name="Objects API" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>An API to manage Objects.

# Introduction

An OBJECT is of a certain OBJECTTYPE (defined in the Objecttypes API). An
OBJECT has a few core attributes that every OBJECT (technically a RECORD,
see below) has, although these attributes can sometimes be empty. They are
attributes like `geometry` and some administrative attributes. The data that
describes the actual object is stored in the `data` attribute and follows
the JSON schema as given by the OBJECTTYPE.

## Validation

When an OBJECT is created or changed the `OBJECT.type` attribute refers to the
matching OBJECTTYPE in the Objecttypes API. The RECORD always indicates which
OBJECTTYPE-VERSION is used, shown in the `RECORD.typeVersion` attribute.

Using these 2 attributes, the appropriate JSON schema is retrieved from the
Objecttypes API and the OBJECT data is validated against this JSON schema.

## History

Each OBJECT has 1 or more RECORDs. A RECORD contains the data of an OBJECT
at a certain time. An OBJECT can have multiple RECORDS that describe the
history of that OBJECT. Changes to an OBJECT actually create a new RECORD
under the OBJECT and leaves the old RECORD as is.

### Material and formal history

History can be seen from 2 perspectives: formal and material history. The
formal history describes the history as it should be (stored in the
`startAt` and `endAt` attributes). The material history describes the
history as it was administratively processed (stored in the `registeredAt`
attribute).

The difference is that an object could be created or updated in the real
world at a certain point in time but the administrative change (ie. save or
update the object in the Objects API) can be done at a later time. The
query parameters `?date=2021-01-01` (formal history) and
`?registrationDate=2021-01-01` (material history) allow for querying the
RECORDS as seen from both perspectives, and can yield different results.

### Corrections

RECORDs cannot be deleted or changed once saved. If an error was made to
a RECORD, the RECORD can be "corrected" by saving a new RECORD and indicate
that it corrects a previous RECORD. This is done via the attribute
`correctionFor`.

### Deletion

Although OBJECTs can be deleted, it is sometimes better to set the
`endDate` of an OBJECT. Deleting an OBJECT also deletes all RECORDs in
accordance with privacy laws.

# Authorizations

The API uses API-tokens that grant certain permissions. The API-token is
passed via a header, like this: `Authorization: Token &lt;token>`

# Notifications

When OBJECTs are created, updated or deleted via the API, notifications of
these operations are published to the configured Notifications API in the
`objecten` channel.</con:description>
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://LAPTOP-UKAI1A6:8089/</con:endpoint>
      <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
    </con:endpoints>
    <con:resource name="/objects" path="/objects" id="411de765-05a5-4934-a930-8d2e4bb5cafd">
      <con:settings/>
      <con:parameters/>
      <con:method name="object_list" id="46d090f4-369f-45d5-ab6a-d9e4af21d44d" method="GET">
        <con:description>Retrieve a list of OBJECTs and their actual RECORD. The actual record is defined as if the query parameter `date=&lt;today>` was given.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>data_attrs</con:name>
            <con:style>QUERY</con:style>
            <con:description>Only include objects that have attributes with certain values.
Data filtering expressions are comma-separated and are structured as follows:
A valid parameter value has the form `key__operator__value`.
`key` is the attribute name, `operator` is the comparison operator to be used and `value` is the attribute value.
Note: Values can be string, numeric, or dates (ISO format; YYYY-MM-DD).

Valid operator values are:
* `exact` - equal to
* `gt` - greater than
* `gte` - greater than or equal to
* `lt` - lower than
* `lte` - lower than or equal to
* `icontains` - case-insensitive partial match

`value` may not contain double underscore or comma characters.
`key` may not contain comma characters and includes double underscore only if it indicates nested attributes.

Example: in order to display only objects with `height` equal to 100, query `data_attrs=height__exact__100`
should be used. If `height` is nested inside `dimensions` attribute, query should look like
`data_attrs=dimensions__height__exact__100`</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>date</con:name>
            <con:style>QUERY</con:style>
            <con:description>Display record data for the specified material date, i.e. the specified date would be between `startAt` and `endAt` attributes. The default value is today</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>fields</con:name>
            <con:style>QUERY</con:style>
            <con:description>Comma-separated fields, which should be displayed in the response. For example: 'url, uuid, record__geometry'.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>registrationDate</con:name>
            <con:style>QUERY</con:style>
            <con:description>Display record data for the specified registration date, i.e. the specified date would be between `registrationAt` attributes of different records</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>type</con:name>
            <con:style>QUERY</con:style>
            <con:description>Url reference to OBJECTTYPE in Objecttypes API</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="231b3a65-649a-4923-a2c6-4fab9ca7a9f1" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="object_create" id="905dc1ed-8dc2-4366-95cc-e44a60776731" method="POST">
        <con:description>Create an OBJECT and its initial RECORD.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The 'Coordinate Reference System' (CRS) of the request data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type of the request body.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>500 404</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="82aa8045-70bf-466b-926f-b8a9da1d6345" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/objects/{uuid}" path="/objects/{uuid}" id="93f4f118-33db-47aa-8be0-7ba832e64862">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="object_read" id="3e180cc1-80b6-442d-b75d-8897ea703441" method="GET">
        <con:description>Retrieve a single OBJECT and its actual RECORD. The actual record is defined as if the query parameter `date=&lt;today>` was given.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>fields</con:name>
            <con:style>QUERY</con:style>
            <con:description>Comma-separated fields, which should be displayed in the response. For example: 'url, uuid, record__geometry'.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="5219b4f4-71f0-4bbd-89f7-ffcf90a8e9b2" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="object_update" id="0a5f2337-689e-4416-8360-05b107ebfbdf" method="PUT">
        <con:description>Update the OBJECT by creating a new RECORD with the updates values.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The 'Coordinate Reference System' (CRS) of the request data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type of the request body.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="2540ab28-de40-450e-8bd1-57c9f602a590" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="object_delete" id="39eaa852-0b81-4dbc-bacf-8d4f598e61e0" method="DELETE">
        <con:description>Delete an OBJECT and all RECORDs belonging to it.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>204</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="0d2b1f64-b4cd-4542-80df-f7da6b3c1836" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="object_partial_update" id="abc3b507-5f9e-4fc5-89f6-04f050964daa" method="PATCH">
        <con:description>Update the OBJECT by creating a new RECORD with the updates values.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The 'Coordinate Reference System' (CRS) of the request data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type of the request body.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="dab0bcc8-c313-43c9-bff2-813627848d2a" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/objects/{uuid}/history" path="/objects/{uuid}/history" id="7c9ebeca-8c48-4021-8d31-9043709d0a44">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>uuid</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description xsi:nil="true"/>
        </con:parameter>
      </con:parameters>
      <con:method name="object_history" id="9aff48de-fbe3-4c30-b63d-16a1f3a0d822" method="GET">
        <con:description>Retrieve all RECORDs of an OBJECT.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="c499c4fd-4d5a-4b09-8047-6b00339c4260" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/objects/search" path="/objects/search" id="ca808821-bc3b-4c4e-b055-1550b3b568dc">
      <con:settings/>
      <con:parameters/>
      <con:method name="object_search" id="a6c68e47-f1f7-4892-a687-7061bc069975" method="POST">
        <con:description>Perform a (geo) search on OBJECTs.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Accept-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The desired 'Coordinate Reference System' (CRS) of the response data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Crs</con:name>
            <con:style>HEADER</con:style>
            <con:description>The 'Coordinate Reference System' (CRS) of the request data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same as WGS84).</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:style>HEADER</con:style>
            <con:description>Content type of the request body.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="a8db8a87-d8b9-48f5-a52d-f1250622bc24" mediaType="application/json">
          <con:settings/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="51faa60a-6964-478d-8f14-899c806b2805" name="e2e">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="b483badf-b620-422e-bd44-140fef80f5a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Illegal Xml Elements - change to tweewegcommunicatie section" searchProperties="true">
      <con:settings/>
      <con:testStep type="properties" name="Properties" id="4d2c8f8e-7d78-4603-814d-3aedda99f8be">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-RYFVKD</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties" id="32e37ebf-4591-461a-9379-bb9c53a377f8">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties" id="702867f1-1a07-4c05-9dea-593d9f950b06">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def caseReferenceNumber = context.expand('${Properties#caseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", caseReferenceNumber);
def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", initiatingSubjectCitizenNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="objects_object_create" id="0145a900-d6f8-4b19-a84b-13f510eee96c">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{\r
   "type" : "dummy",\r
   "record" : {\r
      "index" : 1,\r
      "typeVersion" : 1,\r
      "data" : {\r
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",\r
         "data" : {\r
            "evenement" : {\r
               "naamEvenement" : "gdfhgfh",\r
               "soortEvenement" : "hardloopevenement",\r
               "beschrijvingHWTEvenement" : "dear lord help us 🗿how can anyone 👇survive this 🌭scourge using regex to parse HTML has doomed humanity to an eternity of dread torture and security holes using regex as a tool to process HTML establishes a breach between this world and the dread realm of c͒ͪo͛ͫrrupt entities (like SGML entities, but more corrupt) a mere glimpse of the world of reg​ex parsers for HTML will ins​tantly transport a programmer's consciousness into a world of ceaseless screaming, he comes, the pestilent slithy regex-infection wil​l devour your HT​ML parser, application and existence for all time like Visual Basic only worse he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags lea͠ki̧n͘g fr̶ǫm ̡yo​͟ur eye͢s̸ ̛l̕ik͏e liq​uid pain, the song of re̸gular exp​ression parsing will exti​nguish the voices of mor​tal man from the sp​here I can see it can you see ̲͚̖͔̙î̩́t̲͎̩̱͔́̋̀ it is beautiful t​he final snuffing of the lie​s of Man ALL IS LOŚ͖̩͇̗̪̏̈́T ALL I​S LOST the pon̷y he comes he c̶̮omes he comes the ich​or permeates all MY FACE MY FACE ᵒh god no NO NOO̼O​O NΘ stop the an​*̶͑̾̾​̅ͫ͏̙̤g͇̫͛͆̾ͫ̑͆l͖͉̗̩̳̟̍ͫͥͨe̠̅s ͎a̧͈͖r̽̾̈́͒͑e n​ot rè̑ͧ̌aͨl̘̝̙̃ͤ͂̾̆ ZA̡͊͠͝LGΌ ISͮ̂҉̯͈͕̹̘̱ TO͇̹̺ͅƝ̴ȳ̳ TH̘Ë͖́̉ ͠P̯͍̭O̚​N̐Y̡ H̸̡̪̯ͨ͊̽̅̾̎Ȩ̬̩̾͛ͪ̈́̀́͘ ̶̧̨̱̹̭̯ͧ̾ͬC̷̙̲̝͖ͭ̏ͥͮ͟Oͮ͏̮̪̝͍M̲̖͊̒ͪͩͬ̚̚͜Ȇ̴̟̟͙̞ͩ͌͝S̨̥̫͎̭ͯ̿̔̀ͅ",\r
               "isDitEenJaarlijkseTerugkerendEvenement" : "nee"\r
            },\r
            "plekken-evenement" : {\r
               "kolommen" : {\r
                  "0" : {\r
                     "startdatumOpbouw" : "2024-02-23"\r
                  },\r
                  "1" : {\r
                     "startdatumEvenement" : "2024-02-24"\r
                  },\r
                  "2" : {\r
                     "einddatumEvenement" : "2024-02-25"\r
                  },\r
                  "3" : {\r
                     "einddatumAfbouw" : "2024-02-26"\r
                  }\r
               },\r
               "kolommenTijden" : {\r
                  "0" : {\r
                     "openingstijdEvenement" : "10:00:00"\r
                  },\r
                  "1" : {\r
                     "sluitingstijdEvenement" : "23:00:00"\r
                  }\r
               },\r
               "meerdaagsEvenement" : "rtyrt",\r
               "veldengroepEvenMent" : {\r
                  "locatie" : {\r
                     "kiesLocatie" : "domplein",\r
                     "hoeveelBezoekers" : "51tot500",\r
                     "afsluitingEvenement" : "nee",\r
                     "druksteMomentLocatie" : 258\r
                  },\r
                  "hoeveelLocaties" : "een"\r
               }\r
            },\r
            "bijlagen-evenement" : {\r
               "bijlagenToevoegen" : [\r
                  {\r
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/15a1fa8f-635b-4fdc-bb63-096af64856f0",\r
                     "data" : {\r
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/15a1fa8f-635b-4fdc-bb63-096af64856f0",\r
                        "form" : "",\r
                        "name" : "Bijlage 7.txt",\r
                        "size" : 9,\r
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",\r
                        "project" : ""\r
                     },\r
                     "name" : "Bijlage 7-8e552b32-afd1-4699-926e-c48e1f3f7f66.txt",\r
                     "size" : 9,\r
                     "type" : "text/plain",\r
                     "storage" : "url",\r
                     "originalName" : "Bijlage 7.txt"\r
                  }\r
               ]\r
            },\r
            "bezoekers-evenement" : {\r
               "overnachten" : "nee",\r
               "drugsGebruik" : "nee",\r
               "alcoholSchenken" : "nee",\r
               "leeftijdBezoekers" : {
                  "18-30 jaar" : false,
                  "30-65 jaar" : false,
                  "Alle leeftijden" : true,
                  "65 jaar of ouder" : false,
                  "0-12 jaar, met ouders" : false,
                  "12-18 jaar, met ouders" : false,
                  "0-12 jaar, zonder ouders" : false,
                  "12-18 jaar, zonder ouders" : false
               }

            },\r
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "3524 VD",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "26",
                     "straatnaamPMD" : "Ardennen",
                     "woonplaatsPMD" : "Utrecht",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "f.bekker@utrecht.nl",
                     "telefoonnummerPMD" : "0302865464",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "${#TestCase#initiatingSubjectCitizenNumber}",
                     "aanhefPMD" : "M",
                     "voornamenPMD" : "Bob",
                     "achternaamPMD" : "Hoekstra",
                     "voorletterSPMD" : "B.",
                     "geboortedatumPMD" : "1970-06-20",
                     "geboorteplaatsPMD" : "Wijk bij Duurstede",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "persoon",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "",
                     "postcodeMEH" : "",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : "",
                     "straatnaamMEH" : "",
                     "huisnummertoevoegingMEH" : ""
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "",
                     "telefoonnummerMEH" : ""
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "",
                     "achternaamMEH" : "",
                     "voorletterSMEH" : "",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "",
                     "vestigingsnummerMEH" : "",
                     "naamBedrijfOrganisatieMEH" : ""
                  }
               },
               "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "DigiD",
               "bentUEenPersoonOfEenBedrijf" : ""
            }\r,
            "invulling-evenementen" : {\r
               "isErMuziek" : "nee",\r
               "dierenAanwezig" : "nee",\r
               "objectenEvenement" : "nee",\r
               "andereVoorzieningen" : "nee",\r
               "overigEntertainment" : "nee",\r
               "verkooppuntenAanwezig" : "nee",\r
               "doorWieWordtDeLocatieSchoongemaakt" : {\r
                  "eigenOrganisatie" : true,\r
                  "ingehuurdBedrijf" : false\r
               },\r
               "datumTijdSchoongemaakteLocatieNaAfbouw" : "2024-02-29T13:45:00+01:00"\r
            }\r
         },\r
         "type" : "EVENIEUW",\r
         "csv_url" : "",\r
         "payment" : {\r
            "amount" : "",\r
            "completed" : false,\r
            "public_order_ids" : ""\r
         },\r
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",\r
         "attachments" : [\r
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"\r
         ],\r
         "language_code" : "nl",\r
         "submission_id" : "e0e14526-92b5-4413-ad9c-0a44185260a5",\r
         "public_reference" : "${Properties#CaseReferenceNumber}"\r
      },\r
      "geometry" : null,\r
      "startAt" : "2024-02-01",\r
      "endAt" : null,\r
      "registrationAt" : "2024-02-01",\r
      "correctionFor" : null,\r
      "correctedBy" : null\r
   }\r
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="bd1f597c-2604-4bac-b93b-0b1676b26a62" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tweewegcommunicatie HappyFlow" searchProperties="true">
      <con:settings/>
      <con:testStep type="properties" name="Properties" id="6a3164fe-d7e1-4b67-bb84-bd4759512efc">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-MGBYYT</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties" id="87c94044-303b-406b-87ec-0e94eed19c54">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties" id="eacc93ba-8e37-4821-9e1d-82ba7db615ec">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def caseReferenceNumber = context.expand('${Properties#caseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", caseReferenceNumber);
def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", initiatingSubjectCitizenNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="objects_object_create" id="817e33f8-2c51-4a00-84c1-2f4e1171b595">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{\r
   "type" : "dummy",\r
   "record" : {\r
      "index" : 1,\r
      "typeVersion" : 1,\r
      "data" : {\r
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",\r
         "data" : {\r
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "3524 VD",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "26",
                     "straatnaamPMD" : "Ardennen",
                     "woonplaatsPMD" : "Utrecht",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "f.bekker@utrecht.nl",
                     "telefoonnummerPMD" : "0302865464",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "${#TestCase#initiatingSubjectCitizenNumber}",
                     "aanhefPMD" : "M",
                     "voornamenPMD" : "Bob",
                     "achternaamPMD" : "Hoekstra",
                     "voorletterSPMD" : "B.",
                     "geboortedatumPMD" : "1970-06-20",
                     "geboorteplaatsPMD" : "Wijk bij Duurstede",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "persoon",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "",
                     "postcodeMEH" : "",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : "",
                     "straatnaamMEH" : "",
                     "huisnummertoevoegingMEH" : ""
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "",
                     "telefoonnummerMEH" : ""
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "",
                     "achternaamMEH" : "",
                     "voorletterSMEH" : "",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "",
                     "vestigingsnummerMEH" : "",
                     "naamBedrijfOrganisatieMEH" : ""
                  }
               },
               "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "DigiD",
               "bentUEenPersoonOfEenBedrijf" : ""
            },
            "gegevenstweewegcommunicatie" : {\r
               "zaaknummer" : "${Properties#caseReferenceNumber}",\r
               "bestandsupload" : [\r
                  {\r
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",\r
                     "data" : {\r
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",\r
                        "form" : "",\r
                        "name" : "TEST_Marcel.pdf",\r
                        "size" : 7286,\r
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",\r
                        "project" : ""\r
                     },\r
                     "name" : "TEST_Marcel-82c19341-2c1b-486b-8d19-589234ec29ab.pdf",\r
                     "size" : 7286,\r
                     "type" : "application/pdf",\r
                     "storage" : "url",\r
                     "originalName" : "TEST_Marcel.pdf"\r
                  }\r
               ]\r
            }\r
         },\r
         "type" : "TWEEWEGCOMMUNICATIE",\r
         "csv_url" : "",\r
         "payment" : {\r
            "amount" : "",\r
            "completed" : false,\r
            "public_order_ids" : ""\r
         },\r
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",\r
         "attachments" : [\r
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"\r
         ],\r
         "language_code" : "nl",\r
         "submission_id" : "60114ebd-cfb7-49d1-abad-6a22282b501a",\r
         "public_reference" : "OF-${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6)}"\r
      },\r
      "geometry" : null,\r
      "startAt" : "2024-03-19",\r
      "endAt" : null,\r
      "registrationAt" : "2024-03-19",\r
      "correctionFor" : null,\r
      "correctedBy" : null\r
   }\r
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay 1" id="f279f7ea-3712-4d59-bd79-a86a31ef1a6b">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="get emails from mailslurper" id="58c1af02-aeb2-4c54-a848-5afe9660b289">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="get emails from mailslurper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JsonPath Match" id="7b871747-3557-4477-ae9d-e52ee5a7f63a" name="Total Records 1">
            <con:configuration>
              <path>$.totalRecords</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="delete emails from mailslurper" id="d64d3012-cf7c-4b97-86b9-52ec1d0ec11a">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="delete emails from mailslurper" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request>{
  "pruneCode": "all"
}</con:request>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="1f671084-b081-4a89-8fdf-fc631539693f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tweewegcommunicatie CaseNotFound" searchProperties="true">
      <con:settings/>
      <con:testStep type="manualTestStep" name="README" id="9e771c7e-251f-4507-867a-c90c3080ec2a">
        <con:description>set-dynamic-mock-properties:
- needs to be changed so that it references the mockservice that serves geefZaakDetails
- "initiatingSubjectCitizenNumber" should be renamed to "initiatorBsn" or something similar
- Above property needs to also be set on the mockservice
- In the mockservice you can add a script to decide which response to give back based on the request.
  In this testcase there should be a condition on caseReference "NOCASEFOUND" returning a geefZaakDetails response that indicated no zaak was found.

Same ish goes for the EHerkenning testcase. Only difference being kvknummer instead of bsn</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:expectedResult/>
        </con:config>
      </con:testStep>
      <con:testStep type="properties" name="Properties" id="1fe7c853-4388-4a5f-84fd-83a144014366">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:target/>
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-WSHTXJ</con:value>
            </con:property>
            <con:property>
              <con:name>targetCaseReferenceNumber</con:name>
              <con:value>OF-CASENOTFOUND</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties-tweewegcommunicatie(NOCASEFOUND)" id="c28b41e6-de88-470a-9733-e36a73fabfec">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);

dynamicProperties.setPropertyValue('targetCaseReferenceNumber', 'OF-CASENOTFOUND');</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties" id="99bba762-ec07-45d4-9660-c3a06d3ba273">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def caseReferenceNumber = context.expand('${Properties#caseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", caseReferenceNumber);
def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", initiatingSubjectCitizenNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="objects_object_create" id="ebccc11d-4d42-43ba-b3bd-89f3e8c05032">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{
   "type" : "dummy",
   "record" : {
      "index" : 1,
      "typeVersion" : 1,
      "data" : {
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",
         "data" : {
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "3524 VD",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "26",
                     "straatnaamPMD" : "Ardennen",
                     "woonplaatsPMD" : "Utrecht",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "f.bekker@utrecht.nl",
                     "telefoonnummerPMD" : "0302865464",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "${#TestCase#initiatingSubjectCitizenNumber}",
                     "aanhefPMD" : "M",
                     "voornamenPMD" : "Bob",
                     "achternaamPMD" : "Hoekstra",
                     "voorletterSPMD" : "B.",
                     "geboortedatumPMD" : "1970-06-20",
                     "geboorteplaatsPMD" : "Wijk bij Duurstede",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "persoon",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "",
                     "postcodeMEH" : "",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : "",
                     "straatnaamMEH" : "",
                     "huisnummertoevoegingMEH" : ""
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "",
                     "telefoonnummerMEH" : ""
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "",
                     "achternaamMEH" : "",
                     "voorletterSMEH" : "",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "",
                     "vestigingsnummerMEH" : "",
                     "naamBedrijfOrganisatieMEH" : ""
                  }
               },
               "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "DigiD",
               "bentUEenPersoonOfEenBedrijf" : ""
            },
            "gegevenstweewegcommunicatie" : {
               "zaaknummer" : "${Properties#targetCaseReferenceNumber}",
               "bestandsupload" : [
                  {
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                     "data" : {
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                        "form" : "",
                        "name" : "TEST_Marcel.pdf",
                        "size" : 7286,
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",
                        "project" : ""
                     },
                     "name" : "TEST_Marcel-82c19341-2c1b-486b-8d19-589234ec29ab.pdf",
                     "size" : 7286,
                     "type" : "application/pdf",
                     "storage" : "url",
                     "originalName" : "TEST_Marcel.pdf"
                  }
               ]
            }
         },
         "type" : "TWEEWEGCOMMUNICATIE",
         "csv_url" : "",
         "payment" : {
            "amount" : "",
            "completed" : false,
            "public_order_ids" : ""
         },
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
         "attachments" : [
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"
         ],
         "language_code" : "nl",
         "submission_id" : "60114ebd-cfb7-49d1-abad-6a22282b501a",
         "public_reference" : "${Properties#caseReferenceNumber}"
      },
      "geometry" : null,
      "startAt" : "2024-03-19",
      "endAt" : null,
      "registrationAt" : "2024-03-19",
      "correctionFor" : null,
      "correctedBy" : null
   }
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="b3830613-c256-4032-bc81-2bf6507d6668" name="Script Assertion">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay 1" id="e101bf2f-3c79-43ea-8746-09a7f49f7fa1">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="get emails from mailslurper" id="669f216a-a805-4c7e-889a-e3a82b575350">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="get emails from mailslurper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JsonPath Match" id="7b871747-3557-4477-ae9d-e52ee5a7f63a" name="Total Records 1">
            <con:configuration>
              <path>$.totalRecords</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="delete emails from mailslurper" id="626e8810-d9bb-440d-b09d-da184348b4f3">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="delete emails from mailslurper" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request>{
  "pruneCode": "all"
}</con:request>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="23b78cc4-169c-4fce-af0d-59483ded296b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tweewegcommunicatie CaseNotFound EHerkenning" searchProperties="true">
      <con:settings/>
      <con:testStep type="properties" name="Properties" id="5f848029-fc66-4efc-840f-3028ff7f0c65">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:target/>
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-IBXOHQ</con:value>
            </con:property>
            <con:property>
              <con:name>targetCaseReferenceNumber</con:name>
              <con:value>OF-CASENOTFOUND</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties-tweewegcommunicatie(NOCASEFOUND)" id="e17c4755-33ce-4d23-a395-9e8db076622d">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);

dynamicProperties.setPropertyValue('targetCaseReferenceNumber', 'OF-CASENOTFOUND');</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties" id="f321825b-7bad-4878-8404-6d24a21660c9">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def caseReferenceNumber = context.expand('${Properties#caseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", caseReferenceNumber);
def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", initiatingSubjectCitizenNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="objects_object_create" id="21d2e630-4fa7-4723-a05c-87cfde12c943">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{
   "type" : "dummy",
   "record" : {
      "index" : 1,
      "typeVersion" : 1,
      "data" : {
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",
         "data" : {
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "",
                     "straatnaamPMD" : "",
                     "woonplaatsPMD" : "",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "",
                     "telefoonnummerPMD" : "",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "",
                     "aanhefPMD" : "",
                     "voornamenPMD" : "",
                     "achternaamPMD" : "",
                     "voorletterSPMD" : "",
                     "geboortedatumPMD" : "",
                     "geboorteplaatsPMD" : "",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "bedrijf",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "Lollum",
                     "postcodeMEH" : "8823SJ",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : 3,
                     "straatnaamMEH" : "Hizzaarderlaan",
                     "huisnummertoevoegingMEH" : "A"
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "p.dorhout@utrecht.nl",
                     "telefoonnummerMEH" : "0612345678"
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "deHeer",
                     "achternaamMEH" : "Dorhout",
                     "voorletterSMEH" : "P",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "68750110",
                     "vestigingsnummerMEH" : "000037178598",
                     "naamBedrijfOrganisatieMEH" : "Test BV Donald"
                  }
               },
            	 "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "EHerkenning",
               "bentUEenPersoonOfEenBedrijf" : "bedrijf"
            },
            "gegevenstweewegcommunicatie" : {
               "zaaknummer" : "${Properties#targetCaseReferenceNumber}",
               "bestandsupload" : [
                  {
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                     "data" : {
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                        "form" : "",
                        "name" : "TEST_Marcel.pdf",
                        "size" : 7286,
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",
                        "project" : ""
                     },
                     "name" : "TEST_Marcel-82c19341-2c1b-486b-8d19-589234ec29ab.pdf",
                     "size" : 7286,
                     "type" : "application/pdf",
                     "storage" : "url",
                     "originalName" : "TEST_Marcel.pdf"
                  }
               ]
            }
         },
         "type" : "TWEEWEGCOMMUNICATIE",
         "csv_url" : "",
         "payment" : {
            "amount" : "",
            "completed" : false,
            "public_order_ids" : ""
         },
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
         "attachments" : [
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"
         ],
         "language_code" : "nl",
         "submission_id" : "60114ebd-cfb7-49d1-abad-6a22282b501a",
         "public_reference" : "${Properties#caseReferenceNumber}"
      },
      "geometry" : null,
      "startAt" : "2024-03-19",
      "endAt" : null,
      "registrationAt" : "2024-03-19",
      "correctionFor" : null,
      "correctedBy" : null
   }
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="b3830613-c256-4032-bc81-2bf6507d6668" name="Script Assertion">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay 1" id="f79a2f5e-3c33-4788-8ab1-84778fe7f01e">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="get emails from mailslurper" id="3609d3a0-c99f-40d6-aa96-0ee6673dcba0">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="get emails from mailslurper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JsonPath Match" id="7b871747-3557-4477-ae9d-e52ee5a7f63a" name="Total Records 1">
            <con:configuration>
              <path>$.totalRecords</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="delete emails from mailslurper" id="1b3e43d4-4540-4eb9-bbc4-5a514d9edfa2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="delete emails from mailslurper" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request>{
  "pruneCode": "all"
}</con:request>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="ebca3ff5-f51f-4bf6-9348-0b76b904cd2f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tweewegcommunicatie SubjectNotEqualsCaseSubject" searchProperties="true">
      <con:settings/>
      <con:testStep type="manualTestStep" name="README" id="868964e1-2f4e-46e8-8bf6-d908fa2a7f85">
        <con:description>set-dynamic-mock-properties:
- needs to be changed so that it references the mockservice that serves geefZaakDetails
- "initiatingSubjectCitizenNumber" should be renamed to "initiatorBsn" or something similar
- Above property needs to also be set on the mockservice
- initiatorBsn should be set to some stupid number that is not the same as the iniatorBsn used in the form, like it is already setup now (123456789)</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:expectedResult/>
        </con:config>
      </con:testStep>
      <con:testStep type="properties" name="Properties" id="88a2535a-eb3b-41c5-9446-700024fd124b">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:target/>
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-YEUYMF</con:value>
            </con:property>
            <con:property>
              <con:name>targetCaseReferenceNumber</con:name>
              <con:value>OF-AENIPD</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties-tweewegcommunicatie" id="38e994e3-b6a2-4c7b-8949-1a5d9a783653">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);

def targetCaseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('targetCaseReferenceNumber', targetCaseReferenceNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties(mismatching bsn)" id="47c05040-71a2-451b-bbcb-6a43608f2422">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def targetCaseReferenceNumber = context.expand('${Properties#targetCaseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", targetCaseReferenceNumber);
//def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", '123456789');</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of objects_object_create" id="1cded775-4584-4a33-bd90-17242153a8de">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{
   "type" : "dummy",
   "record" : {
      "index" : 1,
      "typeVersion" : 1,
      "data" : {
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",
         "data" : {
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "3524 VD",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "26",
                     "straatnaamPMD" : "Ardennen",
                     "woonplaatsPMD" : "Utrecht",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "f.bekker@utrecht.nl",
                     "telefoonnummerPMD" : "0302865464",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "${#TestCase#initiatingSubjectCitizenNumber}",
                     "aanhefPMD" : "M",
                     "voornamenPMD" : "Bob",
                     "achternaamPMD" : "Hoekstra",
                     "voorletterSPMD" : "B.",
                     "geboortedatumPMD" : "1970-06-20",
                     "geboorteplaatsPMD" : "Wijk bij Duurstede",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "persoon",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "",
                     "postcodeMEH" : "",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : "",
                     "straatnaamMEH" : "",
                     "huisnummertoevoegingMEH" : ""
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "",
                     "telefoonnummerMEH" : ""
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "",
                     "achternaamMEH" : "",
                     "voorletterSMEH" : "",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "",
                     "vestigingsnummerMEH" : "",
                     "naamBedrijfOrganisatieMEH" : ""
                  }
               },
               "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "DigiD",
               "bentUEenPersoonOfEenBedrijf" : ""
            },
            "gegevenstweewegcommunicatie" : {
               "zaaknummer" : "${Properties#targetCaseReferenceNumber}",
               "bestandsupload" : [
                  {
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                     "data" : {
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/7c50b4b8-e22e-4c83-a50d-f52695aa673b",
                        "form" : "",
                        "name" : "TEST_Marcel.pdf",
                        "size" : 7286,
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",
                        "project" : ""
                     },
                     "name" : "TEST_Marcel-82c19341-2c1b-486b-8d19-589234ec29ab.pdf",
                     "size" : 7286,
                     "type" : "application/pdf",
                     "storage" : "url",
                     "originalName" : "TEST_Marcel.pdf"
                  }
               ]
            }
         },
         "type" : "TWEEWEGCOMMUNICATIE",
         "csv_url" : "",
         "payment" : {
            "amount" : "",
            "completed" : false,
            "public_order_ids" : ""
         },
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
         "attachments" : [
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"
         ],
         "language_code" : "nl",
         "submission_id" : "60114ebd-cfb7-49d1-abad-6a22282b501a",
         "public_reference" : "${Properties#caseReferenceNumber}"
      },
      "geometry" : null,
      "startAt" : "2024-03-19",
      "endAt" : null,
      "registrationAt" : "2024-03-19",
      "correctionFor" : null,
      "correctedBy" : null
   }
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="b3830613-c256-4032-bc81-2bf6507d6668" name="Script Assertion">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay 1" id="5f615f76-4ddb-4deb-ad73-1e7460423aa3">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="get emails from mailslurper" id="5ce11e88-49b7-49af-a214-0b540a26d14d">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="get emails from mailslurper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JsonPath Match" id="7b871747-3557-4477-ae9d-e52ee5a7f63a" name="Total Records 1">
            <con:configuration>
              <path>$.totalRecords</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="delete emails from mailslurper" id="74b31c25-624b-43a9-a8d1-91b2110d1947">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" id="c6b07a11-72e6-4b18-bb2a-c9d3d433f3d1" name="delete emails from mailslurper" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:8025/mail</con:endpoint>
          <con:request>{
  "pruneCode": "all"
}</con:request>
          <con:assertion type="Valid HTTP Status Codes" id="8e1cdd79-f29d-4693-a144-daad94f67e60" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="318999bc-f3f8-431a-b146-56f9a83bb346" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Document With Alpha3b" searchProperties="true">
      <con:settings/>
      <con:testStep type="manualTestStep" name="README" id="c0023afa-989b-4fca-9a08-52c157d2e6e6">
        <con:description>- Needs object_create body from tweewegcommunicatie instead.
- This testcase is for testing converting an alpha3b(eng) language code from enkelvoudiginformatieobject to an alpha2(en).
  Normally http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf is called, which uses "nld"(alpha3t)
  To test alpha3b use http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/alpha3bLanguage instead, which uses "eng"(alpha3b)
  
Language conversion:
A lookup is done in alpha3t list for the 3-letter language code, if not present, lookup in alpha3b list.
The 2-letter alpha2 language code is then returned.
Then it creates an approximation of a language+country code with lower-case(en)_upper-case(EN) like "en_EN".
The other testcases use the most commonly used "nld" language code, which is an alpha3t code.
Alpha3t and Alpha3b are both 3-letter language code and there is no difference between them besides it simply being in a different list.
Language+countrycode is an approximation because you can't actually convert a language code to a language+countrycode. 
Simply using the same 2-letter code for language and the countrycode works most of the time. "en_EN" happens to be one of the exceptions, whicht should be "en_GB" instead.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="properties" name="Properties" id="b71c2952-ebc7-4045-9dd6-8ce93c05c0f5">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:target/>
          <con:properties>
            <con:property>
              <con:name>caseReferenceNumber</con:name>
              <con:value>OF-ZTTFBM</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="generate-dynamic-properties" id="22a2a467-67b5-42db-8bd8-06f655a1f26b">
        <con:settings/>
        <con:config>
          <script>def dynamicProperties = testRunner.testCase.getTestStepByName("Properties");

def caseReferenceNumber = "OF-" + org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6).toUpperCase();
dynamicProperties.setPropertyValue('caseReferenceNumber', caseReferenceNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set-dynamic-mock-properties" id="fb7216da-7ef6-4a23-b58b-64bc6d96e1cd">
        <con:settings/>
        <con:config>
          <script>def casesServiceMock = testRunner.testCase.testSuite.project.mockServices["BPEL CasesProxy Mock"].getMockRunner().getMockService();

def caseReferenceNumber = context.expand('${Properties#caseReferenceNumber}');
casesServiceMock.setPropertyValue("caseReferenceNumber", caseReferenceNumber);
def initiatingSubjectCitizenNumber = context.expand('${#TestCase#initiatingSubjectCitizenNumber}');
casesServiceMock.setPropertyValue("initiatingSubjectCitizenNumber", initiatingSubjectCitizenNumber);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Copy of objects_object_create" id="501d38f4-f05c-4146-8d66-c24b1d87c8c6">
        <con:settings/>
        <con:config service="Objects API" methodName="object_create" resourcePath="/objects" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of objects_object_create" id="ed424109-4058-4072-9e27-fa17d227f6a0" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://host.docker.internal:9000/objects/api/v2</con:endpoint>
            <con:request>{\r
   "type" : "dummy",\r
   "record" : {\r
      "index" : 1,\r
      "typeVersion" : 1,\r
      "data" : {\r
         "bsn" : "${#TestCase#initiatingSubjectCitizenNumber}",\r
         "data" : {\r
            "uw-klacht" : {\r
               "hoeLaat" : "Tijdstip",\r
               "watIsUwKlacht" : "Klacht",\r
               "wanneerIsDitGebeurd" : "Wanneer",\r
               "welkOrganisatieOnderdeel" : "anders",\r
               "tOverWieWiltUEenKlachtIndienen" : "Henk",\r
               "watWiltUDatDeGemeenteDoetOmUwKlachtOpTeLossen" : "Ontslag"\r
            },\r
            "uw-gegevenscompleet" : {
               "fieldSetMetDigiD" : {
                  "adresgegevensMD" : {
                     "postcodePMD" : "3524 VD",
                     "huisletterPMD" : "",
                     "huisnummerPMD" : "26",
                     "straatnaamPMD" : "Ardennen",
                     "woonplaatsPMD" : "Utrecht",
                     "huisnummertoevoegingPMD" : ""
                  },
                  "contactgegevensMD" : {
                     "eMailadresPMD" : "f.bekker@utrecht.nl",
                     "telefoonnummerPMD" : "0302865464",
                     "telefoonnummerWerkPMD" : "",
                     "telefoonnummerMobielPMD" : ""
                  },
                  "persoonsgegevensMD" : {
                     "bsnPMD" : "${#TestCase#initiatingSubjectCitizenNumber}",
                     "aanhefPMD" : "M",
                     "voornamenPMD" : "Bob",
                     "achternaamPMD" : "Hoekstra",
                     "voorletterSPMD" : "B.",
                     "geboortedatumPMD" : "1970-06-20",
                     "geboorteplaatsPMD" : "Wijk bij Duurstede",
                     "tussenvoegselSPMD" : ""
                  }
               },
               "initiatingSubject" : "persoon",
               "fieldSetBedrijfMEH" : {
                  "bezoekadresMEH" : {
                     "plaatsMEH" : "",
                     "postcodeMEH" : "",
                     "huisletterMEH" : "",
                     "huisnummerMEH" : "",
                     "straatnaamMEH" : "",
                     "huisnummertoevoegingMEH" : ""
                  },
                  "communicatieMEH" : {
                     "eMailadresMEH" : "",
                     "telefoonnummerMEH" : ""
                  },
                  "contactpersoonMEH" : {
                     "aanhefMEH" : "",
                     "achternaamMEH" : "",
                     "voorletterSMEH" : "",
                     "tussenvoegselSMEH" : ""
                  },
                  "gegevensBedrijfOrganisatieMEH" : {
                     "kvKNummerMEH" : "",
                     "vestigingsnummerMEH" : "",
                     "naamBedrijfOrganisatieMEH" : ""
                  }
               },
               "fieldSetBedrijfZEH" : {
                  "bezoekadresZEH" : {
                     "plaatsZEH" : "",
                     "postcodeZEH" : "",
                     "huisletterZEH" : "",
                     "huisnummerZEH" : null,
                     "straatnaamZEH" : "",
                     "huisnummertoevoegingZEH" : ""
                  },
                  "communicatieZEH" : {
                     "eMailadresZEH" : "",
                     "telefoonnummerZEH" : "",
                     "postbusGebruikenZEH" : "",
                     "postbusOndernemingZEH" : {
                        "postbusnummerZEH" : null,
                        "postbus_plaatsZEH" : "",
                        "postbus_postcodeZEH" : ""
                     }
                  },
                  "contactpersoonZEH" : {
                     "aanhefZEH" : "",
                     "achternaamZEH" : "",
                     "voorletterSZEH" : "",
                     "tussenvoegselSZEH" : ""
                  },
                  "gegevensBedrijfOrganisatieZEH" : {
                     "kvKNummerZEH" : "",
                     "vestigingsnummerZEH" : "",
                     "naamBedrijfOrganisatieZEH" : ""
                  }
               },
               "fieldSetZonderDigiD" : {
                  "adresgegevensZD" : {
                     "postcodePZD" : "",
                     "huisletterPZD" : "",
                     "huisnummerPZD" : null,
                     "straatnaamPZD" : "",
                     "woonplaatsPZD" : "",
                     "huisnummertoevoegingPZD" : ""
                  },
                  "contactgegevensZD" : {
                     "eMailadresPZD" : "",
                     "telefoonnummerPZD" : "",
                     "telefoonnummerWerkPZD" : "",
                     "telefoonnummerMobielPZD" : ""
                  },
                  "persoonsgegevensZD" : {
                     "bsnPZD" : "",
                     "aanhefPZD" : "",
                     "voornamenPZD" : "",
                     "achternaamPZD" : "",
                     "voorletterSPZD" : "",
                     "geboortedatumPZD" : "",
                     "tussenvoegselSPZD" : ""
                  }
               },
               "initiatingSubjectAuth" : "DigiD",
               "bentUEenPersoonOfEenBedrijf" : ""
            },
            "bijlagen-toevoegen-klacht" : {\r
               "file" : [\r
                  {\r
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/4df96139-ef95-419d-9259-e64799587c09",\r
                     "data" : {\r
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/4df96139-ef95-419d-9259-e64799587c09",\r
                        "form" : "",\r
                        "name" : "TEST_Marcel.pdf",\r
                        "size" : 7286,\r
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",\r
                        "project" : ""\r
                     },\r
                     "name" : "TEST_Marcel-0aec57d3-db5d-4bfb-b95d-c68de83e6d34.pdf",\r
                     "size" : 7286,\r
                     "type" : "application/pdf",\r
                     "storage" : "url",\r
                     "originalName" : "TEST_Marcel.pdf"\r
                  },\r
                  {\r
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/082db838-0867-46d3-9a55-8a94ab362c51",\r
                     "data" : {\r
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/082db838-0867-46d3-9a55-8a94ab362c51",\r
                        "form" : "",\r
                        "name" : "1.txt",\r
                        "size" : 13,\r
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",\r
                        "project" : ""\r
                     },\r
                     "name" : "1-9a195eac-3ee7-4eee-9a82-f225e3d58167.txt",\r
                     "size" : 13,\r
                     "type" : "text/plain",\r
                     "storage" : "url",\r
                     "originalName" : "1.txt"\r
                  },\r
                  {\r
                     "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/4b292d56-7dd5-45a8-8e8c-23607cb2d0a0",\r
                     "data" : {\r
                        "url" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/submissions/files/4b292d56-7dd5-45a8-8e8c-23607cb2d0a0",\r
                        "form" : "",\r
                        "name" : "test.docx",\r
                        "size" : 172268,\r
                        "baseUrl" : "https://openforms-pdv.cg-intern.ont.utrecht.nl/api/v2/",\r
                        "project" : ""\r
                     },\r
                     "name" : "test-d7c2cfdd-2407-4374-b21e-0cc0373f99bf.docx",\r
                     "size" : 172268,\r
                     "type" : "application/vnd.openxmlformats-officedocument.wordprocessingml.document",\r
                     "storage" : "url",\r
                     "originalName" : "test.docx"\r
                  }\r
               ],\r
               "wiltUBijlagenMeesturen" : "ja",\r
               "ikWilNaBehandelingTevredenheidsonderzoek" : "nee"\r
            }\r
         },\r
         "type" : "P9_2_KLB",\r
         "csv_url" : "",\r
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",\r
         "attachments" : [
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/alpha3bLanguage",
            "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf"
         ],\r
         "language_code" : "nl",\r
         "submission_id" : "076f447a-f0d4-481a-aeb1-3c14aea183ec",\r
         "public_reference" : "${Properties#CaseReferenceNumber}"\r
      },\r
      "geometry" : null,\r
      "startAt" : "2023-11-09",\r
      "endAt" : null,\r
      "registrationAt" : "2023-11-09",\r
      "correctionFor" : null,\r
      "correctedBy" : null\r
   }\r
}</con:request>
            <con:originalUri>http://host.docker.internal/objects/api/v2/objects</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="214a951e-8e63-4ab6-ae77-ecbec8d99322" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="b3830613-c256-4032-bc81-2bf6507d6668" name="Script Assertion">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>initiatingSubjectCitizenNumber</con:name>
          <con:value>176513280</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:restMockService id="d63c7861-f9bf-4330-8cab-d5b197f52c85" port="8700" path="/mock/documenten/api/v1" host="LAPTOP-UKAI1A6" name="Documenten API Mock" docroot="">
    <con:settings/>
    <con:properties/>
    <con:restMockAction name="/enkelvoudiginformatieobjecten/" method="GET" resourcePath="/enkelvoudiginformatieobjecten/" id="873803bc-3266-4151-a811-ed5e794ef299">
      <con:settings/>
      <con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uuid-resultpdf</con:defaultResponse>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("uuid-resultpdf") )
{
    return "uuid-resultpdf"
}
else if( requestPath.contains("alpha3bLanguage") )
{
    return "alpha3bLanguage"
}</con:dispatchPath>
      <con:response name="uuid-resultpdf" id="971efaca-7d2c-4b1d-b825-cd67317fc60b" httpResponseStatus="200" mediaType="application/json">
        <con:settings/>
        <con:responseContent>{
	"url": "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
	"identificatie": "DOCUMENT-2023-0000000218",
	"bronorganisatie": "002220647",
	"creatiedatum": "2023-11-15",
	"titel": "Klacht over de gemeente doorgeven",
	"vertrouwelijkheidaanduiding": "zaakvertrouwelijk",
	"auteur": "Aanvrager",
	"status": "definitief",
	"formaat": "application/pdf",
	"taal": "nld",
	"versie": 1,
	"beginRegistratie": "2023-11-15T00:16:59.344627Z",
	"bestandsnaam": "open-forms-Klacht over de gemeente doorgeven.pdf",
	"inhoud": "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf/download?versie=1",
	"bestandsomvang": 57706,
	"link": "",
	"beschrijving": "Ingezonden formulier",
	"ontvangstdatum": null,
	"verzenddatum": null,
	"indicatieGebruiksrecht": false,
	"ondertekening": {
		"soort": "",
		"datum": null
	},
	"integriteit": {
		"algoritme": "",
		"waarde": "",
		"datum": null
	},
	"informatieobjecttype": "http://host.docker.internal:8700/mock/catalogi/api/v1/informatieobjecttypen/827a6ff8-9192-48de-b6c9-4bfb9607b106",
	"locked": false,
	"bestandsdelen": []
}</con:responseContent>
      </con:response>
      <con:response name="alpha3bLanguage" id="78492868-18fb-49f2-b331-567108bb5750" httpResponseStatus="200">
        <con:settings/>
        <con:responseContent>{
	"url": "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/alpha3bLanguage",
	"identificatie": "DOCUMENT-2023-0000000218",
	"bronorganisatie": "002220647",
	"creatiedatum": "2023-11-15",
	"titel": "Klacht over de gemeente doorgeven",
	"vertrouwelijkheidaanduiding": "zaakvertrouwelijk",
	"auteur": "Aanvrager",
	"status": "definitief",
	"formaat": "application/pdf",
	"taal": "eng",
	"versie": 1,
	"beginRegistratie": "2023-11-15T00:16:59.344627Z",
	"bestandsnaam": "open-forms-Klacht over de gemeente doorgeven.pdf",
	"inhoud": "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf/download?versie=1",
	"bestandsomvang": 57706,
	"link": "",
	"beschrijving": "Ingezonden formulier",
	"ontvangstdatum": null,
	"verzenddatum": null,
	"indicatieGebruiksrecht": false,
	"ondertekening": {
		"soort": "",
		"datum": null
	},
	"integriteit": {
		"algoritme": "",
		"waarde": "",
		"datum": null
	},
	"informatieobjecttype": "http://host.docker.internal:8700/mock/catalogi/api/v1/informatieobjecttypen/827a6ff8-9192-48de-b6c9-4bfb9607b106",
	"locked": false,
	"bestandsdelen": []
}</con:responseContent>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/enkelvoudiginformatieobjecten//download" method="GET" resourcePath="/enkelvoudiginformatieobjecten/download" id="c24931cb-83d0-469b-be64-067fdf80ff77">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="b26bac29-5e16-4239-9520-af003a51918b" httpResponseStatus="200" mediaType="application/octet-stream">
        <con:settings/>
        <con:responseContent></con:responseContent>
        <con:header>
          <con:name>content-disposition</con:name>
          <con:value>attachment; filename="8d4dad1d-975e-403d-a3a9-1df0ff218f0a.bin"</con:value>
        </con:header>
      </con:response>
    </con:restMockAction>
  </con:restMockService>
  <con:restMockService id="662c932b-b70a-4a18-a4ac-500b24e99ac5" port="8089" path="/mock/objects/api/v2" host="LAPTOP-UKAI1A6" name="Objects API Mock" docroot="">
    <con:settings/>
    <con:properties/>
    <con:restMockAction name="/objects" method="GET" resourcePath="/objects" id="ba3f862c-a7a9-4803-a8e3-195dc2ea6cb9">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="54f3861b-19a4-42e5-bb89-c1b02499e15f" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects" method="POST" resourcePath="/objects" id="f91e22b4-8061-4d2f-b630-27613171a218">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="1772b0d5-354a-4797-ae91-ebd0d35ba232" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects/" method="GET" resourcePath="/objects/" id="e271c8f0-8f0b-40f6-a5af-e7efd9e232b8">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SCRIPT</con:dispatchStyle>
      <con:dispatchPath>// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath
 

if(requestPath.contains("P9_2_KLB"))
{
    return "P9_2_KLB"
}</con:dispatchPath>
      <con:response name="P9_2_KLB" id="02997fa7-39d6-4a74-88f4-e312c32b19c7" httpResponseStatus="200" mediaType="application/json">
        <con:settings/>
        <con:script>import groovy.json.*;

def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath
 

if(requestPath.contains("uw-gegevens-digid-default"))
{
	def projectDir = context.expand('${projectDir}');
    def inputFile = new File(projectDir + "/uw-gegevens-digid-default.json");
    def slurper = new JsonSlurper().parse(inputFile);
    context["uw-gegevens"] = JsonOutput.prettyPrint(new JsonBuilder(slurper).toString());
}</con:script>
        <con:responseContent>{
   "type" : "dummy",
   "record" : {
      "index" : 1,
      "typeVersion" : 1,
      "data" : {
         "bsn" : "176513280",
         "data" : {
            "het-besluit" : {
               "opWelkeManier" : "",
               "waaroverGingHetBesluit" : "klm",
               "wieHeeftHetBesluitGenomen" : "hetCollegeVanBurgemeesterEnWethouders",
               "wieHeeftHetBesluitDanGenomen" : "",
               "ikVerklaarHiermeeBekendTeZijn" : true,
               "tegenWelkBesluitMaaktUBezwaar" : "abc123",
               "watIsDeRedenNa6WekenTermijnBrBezwaarMaakt" : "qqqq",
               "hoeHeeftDeGemeenteHetBesluitKenbaarGemaakt" : "Brief",
               "wanneerHeeftDeGemeenteHetBesluitKenbaarGemaakt" : "2023-12-01"
            },
            "het-bezwaar" : {
               "wiltUGehoordWordenOverHetBezwaar" : "jaHoorzitting",
               "waaromBentUHetNietEensMetHetBesluit" : "ccccc"
            },
            "wie-maakt-bezwaar" : {
               "namensWieMaaktUBezwaar" : "",
               "heeftIemandUGemachtigdOmBezwaarTeMaken" : "nee"
            },
            "bijlagen-toevoegen" : {
               "file" : [ ],
               "wiltUBijlagenMeesturen" : "nee",
               "geeftUHiervoorToestemming" : "ja"
            },
            "uw-gegevenscompleet": ${uw-gegevens#$.uw-gegevenscompleet},
            "waartegen-bezwaar-maken" : {
               "wiltUBezwaarMaken" : "nee"
            }
         },
         "type" : "P9_3_BZB",
         "csv_url" : "",
         "pdf_url" : "http://host.docker.internal:8700/mock/documenten/api/v1/enkelvoudiginformatieobjecten/uuid-resultpdf",
         "attachments" : [ ],
         "language_code" : "nl",
         "submission_id" : "3f1a7325-390b-415a-bd81-4c788d8bcabe",
         "public_reference" : "OF-${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6)}"
      },
      "geometry" : null,
      "startAt" : "2024-04-09",
      "endAt" : null,
      "registrationAt" : "2024-04-09",
      "correctionFor" : null,
      "correctedBy" : null
   }
}</con:responseContent>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects/" method="PUT" resourcePath="/objects/" id="726be142-dcb1-4c3e-8401-8eb438bb3f7a">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="bc6d0d59-0ca0-4f07-9d4e-465500c878db" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects/" method="DELETE" resourcePath="/objects/" id="20833292-89b8-4a2c-b02d-386bccbc8284">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="7dd0673e-b1a4-4937-86d4-d25b0b18ad12" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects/" method="PATCH" resourcePath="/objects/" id="6b8b45c1-5678-4fd9-9753-f53650bd4bfa">
      <con:settings/>
      <con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="591ddab7-38de-480e-af58-dc23c0043cda" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects//history" method="GET" resourcePath="/objects//history" id="09d47836-a7d0-4010-a4a3-239fb8d0dfc5">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="435fd0d0-d3f6-45d0-a344-d4fc47652abf" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/objects/search" method="POST" resourcePath="/objects/search" id="1e0f78dd-2253-4518-8130-50975ef604c6">
      <con:settings/>
      <con:defaultResponse>Response 1</con:defaultResponse>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath>
      <con:response name="Response 1" id="3d2a5a55-eaa8-4a45-b1d7-fd5f34bd162c" httpResponseStatus="200">
        <con:settings/>
      </con:response>
    </con:restMockAction>
  </con:restMockService>
  <con:properties/>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>